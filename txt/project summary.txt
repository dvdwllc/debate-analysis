Ideology Spectrum Prediction
NLP and machine learning applied to the 2016 presidential debates

It's election season, and for most of us that means an endless stream of fundraising emails in our inboxes and a constant barrage of political soundbytes from our radios and TV's. This election cycle has been particularly interesting on the Republican side, where a once massive field of presidential contenders has been slowly and painfully pared down to a select few viable candidates. Though the fight on the Democratic side has become more heated in recent weeks, debates on the left have been far more tame than their Republican counterparts. Still, with a potentially contested Republican convention on the horizon, and growing support for Bernie Sanders threatening to upset Hillary Clinton's once formidable lead, November is still a long, long way away.

One of the things that strikes me when I watch these debates is how broad the political gap between Republican and Democratic candidates has become, even in just the last 8 years. Though unfortunate and counterproductive, it's not at all surprising to see this massive divide given the <a href='https://www.washingtonpost.com/news/wonk/wp/2015/04/23/a-stunning-visualization-of-our-divided-congress/'>chasm that has been forming in congress along party lines in the last half century</a>. Though I'd love to find a way to fix that problem and force our elected officials to work together, we'll probably need to wait for comprehensive campaign finance reform. In the meantime, I figured it would be fun to turn the presidential debates into a data science project!

Thanks to the American Presidency Project at the University of California, Berkeley, detailed transcripts from every presidential debate from the last few decades are <a href='http://www.presidency.ucsb.edu/debates.php'>publicly available online.</a> To collect these debates, I wrote a python script that gathers all relevant transcript url's and then scrapes the text of each debate (sorry for slamming your servers, UCSB) and organizes statements by candidate and year. This resulted in a big table with rows that look like:
<ul>
	<li>Clinton_2016,"Blah blah Senator Sanders...blah...equal pay for equal work...gun control blah..."</li>
	<li>Sanders_2016,"Big banks blah...top 1 percent...free college education blah blah blah..."</li>
	<li>Trump_2016,"We're gonna build a great big wall, and Mexico's gonna pay for it..."</li>
<ul>
In order to turn this large amount of text--about 350 thousand words for 2015 and 2016 alone--into something that a computer can process, I used a natural language processing technique known as "Text Frequency-Inverse Document Frequency" ("Tf-Idf"). This splits the text into individual chunks called "n-grams" that can then be quantified by an integer number of occurrences in each statement, normalized by the number of times they occur in the entire corpus. As an example, the sentence <em>My dog is my friend.</em> can be broken down into the following 1- and 2-grams: <em>my:2, dog:1, is:1, friend:1, my dog:1, dog is: 1, is my: 1, my friend:1</em>. If this statement were part of a much larger work, each of these n-gram counts would be normalized by their frequency in the full text. Thus after applying the Tf-Idf transformation to the presidential debates data set, each candidate's collection of statements becomes a vector of numbers that is related to the number of times they uttered each word or combination of words. These vectors alone could be used to perform unsupervised machine learning analyses on the debate texts, <a href='http://www.realclearpolitics.com/articles/2015/10/29/text-mining_the_debate_trump_was_less_trump-y_128594.html'>as other have done recently.</a> 

Though we're stuck with a two-party system for the foreseeable future, I think it's clear that, in general, it's not terribly informative to classify someone's political beliefs as simply red or blue. There is a broad ideological spectrum between liberal and conservative that is filled with nuance and common ground, and I wanted to take this into account in my model. To that end, I collected ideological spectrum ratings for all of the 2016 presidentail candidates from <a hred='http://www.huffingtonpost.com/findthebest-/every-2016-candidate-from_b_7562176.html'>this HuffPo article.</a> Taken together, the debate Tf-Idf vectors and ideology ratings form a basis on which to train a machine learning model. I tried a broad variety of dimensionality reduction and regression techniques, but most of that is beyond the scope of this post. In the end, after hours of cross-validated grid searches, I arrived at a pipeline with the following steps:
<ol>
	<li>Tf-Idf Vectorizer (minimum document frequency: 0.4, maximum document frequency: 0.9, n-gram range: 1 to 2)</li>
	<li>Truncated Singular Value Decomposition (100 components)</li>
	<li>Linear regression (no regularization)</li>
<ol>
I also trained a random forest regressor with 100 estimators in a second pipeline with a 55 component SVD. This was robust to overfitting in cross-validation trials, and my final model averages the results of the linear regression and random forests pipelines. The model performs well on the small training set, with chi-square values of up to 0.96 in threefold cross validation trials. For a more detailed description of the models and cross-validation approaches I applied, consult my github repository.

The net result of all this work is a model that can estimate the political ideology of a candidate or even an individual statement. While I make no claims as to the "accuracy" of this model, it does produce some interesting and somewhat intuitive results. For example, when "Barack Obama has been the worst president in America's history" is run through the model, the result is strongly conservative. In contrast, when we run "break up the big banks on wall street and provide universal health care" through the model, the result is strongly liberal. There are other interesting results, such as the difference between the two common names for the president's polarizing healthcare legislation: "Obamacare" trends sharply conservative, while "Affordable Care Act" is mostly liberal. 

I'll be putting together a more in-depth discussion of this analysis in the coming weeks, and also creating an interactive web page where you can try the model out for yourself. Check back soon for updates!

<em>Disclaimer: the entire idea that a person's political ideology can be accurately summarized in a single number is suspect to say the least, and the curse of dimensionality is definitely at play in my analysis. Therefore I want to emphasize that this project was simply taken on for fun, and is not meant to make any sort of useful prediction or judgement about anything at all. Enjoy!</em>



